/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package br.screen;

import br.meal.Meal;
import br.meal.MealDAO;
import br.menu.Menu;
import br.menu.MenuDAO;
import br.scheduling.Scheduling;
import br.scheduling.SchedulingDAO;
import br.student.Student;
import br.student.StudentDAO;
import br.util.UserActive;
import br.util.Util;
import java.awt.event.KeyEvent;
import java.text.DateFormat;
import java.text.ParseException;
import java.text.SimpleDateFormat;
import java.util.ArrayList;
import java.util.Date;
import java.util.HashSet;
import java.util.List;
import java.util.Set;
import javax.swing.DefaultListModel;
import javax.swing.JOptionPane;

/**
 *
 * @author pelusb
 */
public class AllowMealStudentFrm extends javax.swing.JDialog {

    private Student student;

    /**
     * Creates new form ChooseMealsAndDate
     */
    public AllowMealStudentFrm() {
        initComponents();
        setLocationRelativeTo(null);
        setModal(true);
        setTitle("Escolha de Refeições");
        clearFields();
        edDate.setText(returnDate());
        insertMeals();
    }

    public String returnDate() {
        Date dataAtual = new Date();
        SimpleDateFormat sdf = new SimpleDateFormat("dd/MM/yyyy");
        String data = sdf.format(dataAtual);
        return data;
    }

    public void insertMeals() {
        cbMeal.removeAllItems();
        cbMeal.addItem("-");
        Date date = null;
        try {
            DateFormat fmt = new SimpleDateFormat("dd/MM/yyyy");
            date = new java.util.Date(fmt.parse(edDate.getText()).getTime());
        } catch (ParseException ex) {
            JOptionPane.showMessageDialog(rootPane, "Data inválida.");
            edDate.requestFocus();
            return;
        }
  
        MenuDAO mdao = new MenuDAO();
        List<Menu> list = mdao.checkExists("campus", UserActive.returnCampus(), "date", date);
        if(list.size()>0){
            for (int i = 0; i < list.size(); i++) {
                cbMeal.addItem(list.get(i));
            }
        } else {
            JOptionPane.showMessageDialog(rootPane, "Nenhuma refeição cadastrada.");
        }
        
    }

    public void clearFields() {
        student = null;
        taStudent.setText("");
        edtMat.setText("");
        edtMat.requestFocus();
        cbMeal.setSelectedIndex(0);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        edtMat = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        cbMeal = new javax.swing.JComboBox();
        jLabel1 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jButton1 = new javax.swing.JButton();
        edDate = new javax.swing.JFormattedTextField();
        jLabel4 = new javax.swing.JLabel();
        jButton2 = new javax.swing.JButton();
        jScrollPane3 = new javax.swing.JScrollPane();
        taStudent = new javax.swing.JTextArea();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setResizable(false);
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jPanel1.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        edtMat.setFont(new java.awt.Font("Verdana", 0, 14)); // NOI18N
        edtMat.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                edtMatKeyPressed(evt);
            }
        });
        jPanel1.add(edtMat, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 40, 150, -1));

        jLabel3.setFont(new java.awt.Font("Verdana", 0, 14)); // NOI18N
        jLabel3.setText("Matrícula ou Código:");
        jPanel1.add(jLabel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 20, -1, -1));

        cbMeal.setFont(new java.awt.Font("Verdana", 0, 14)); // NOI18N
        cbMeal.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        jPanel1.add(cbMeal, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 190, 280, -1));

        jLabel1.setFont(new java.awt.Font("Verdana", 0, 14)); // NOI18N
        jLabel1.setText("Refeição:");
        jPanel1.add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 170, -1, -1));

        jLabel5.setFont(new java.awt.Font("Verdana", 0, 14)); // NOI18N
        jLabel5.setText("Aluno:");
        jPanel1.add(jLabel5, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 70, -1, -1));

        jButton1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/br/imagens/Save_37110.png"))); // NOI18N
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });
        jPanel1.add(jButton1, new org.netbeans.lib.awtextra.AbsoluteConstraints(320, 220, 50, -1));

        edDate.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.DateFormatter(new java.text.SimpleDateFormat("dd/MM/yyyy"))));
        edDate.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                edDateFocusLost(evt);
            }
        });
        jPanel1.add(edDate, new org.netbeans.lib.awtextra.AbsoluteConstraints(170, 40, 170, -1));

        jLabel4.setFont(new java.awt.Font("Verdana", 0, 14)); // NOI18N
        jLabel4.setText("Data:");
        jPanel1.add(jLabel4, new org.netbeans.lib.awtextra.AbsoluteConstraints(170, 20, -1, -1));

        jButton2.setFont(new java.awt.Font("Verdana", 0, 12)); // NOI18N
        jButton2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/br/imagens/forceexit_103817.png"))); // NOI18N
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });
        jPanel1.add(jButton2, new org.netbeans.lib.awtextra.AbsoluteConstraints(380, 220, -1, -1));

        taStudent.setEditable(false);
        taStudent.setColumns(20);
        taStudent.setFont(new java.awt.Font("Verdana", 0, 12)); // NOI18N
        taStudent.setRows(5);
        jScrollPane3.setViewportView(taStudent);

        jPanel1.add(jScrollPane3, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 90, 420, 70));

        getContentPane().add(jPanel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 440, 280));

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void edtMatKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_edtMatKeyPressed
        if (evt.getKeyCode() == KeyEvent.VK_ENTER) {
            if (edtMat.getText().equals("")) {
                JOptionPane.showMessageDialog(rootPane, "Informe a matrícula!");
            } else {

                StudentDAO sDAO = new StudentDAO();

                String mat = edtMat.getText();
                if(mat.equals("")){
                    JOptionPane.showMessageDialog(rootPane, "Informe uma matrícula!");
                }

                List<Student> list = sDAO.checkExists("mat", mat);
                if (list.size() == 0) {
                    try {
                        list = sDAO.checkExists("id", Integer.parseInt(mat));
                    } catch (Exception e) {
                        list = new ArrayList<Student>();
                    }
                    if (list.size() == 0) {
                        clearFields();
                        JOptionPane.showMessageDialog(rootPane, "Matrícula/Código não encontrado!");
                        return;
                    }
                }

                student = new Student();
                student = list.get(0);
                taStudent.setText(br.util.Util.decimalFormat().format(student.getId())
                        +" - "+student.getName() 
                        +"\n"+student.getCourse().getDescription()
                        +"\nData da Próxima Atualização Cadastral: "+new SimpleDateFormat("dd/MM/yyyy").format(student.getDateValid()));

                if(!Util.verifyStudent(rootPane,this.student)){
                        clearFields();
                }

            }
        }
    }//GEN-LAST:event_edtMatKeyPressed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed

        if (student == null) {
            JOptionPane.showMessageDialog(rootPane, "Informe o Aluno.");
            return;
        }
        if (cbMeal.getSelectedIndex() == 0) {
            JOptionPane.showMessageDialog(rootPane, "Informe a Refeição.");
            return;
        }
        if (JOptionPane.showConfirmDialog(rootPane, "Deseja confirmar a refeição " + cbMeal.getSelectedItem() + " para " + student.getName() + "?",
                "IFCE", JOptionPane.YES_NO_OPTION) == JOptionPane.YES_OPTION) {

            String dataString = edDate.getText();
            java.util.Date date;
            try {
                DateFormat fmt = new SimpleDateFormat("dd/MM/yyyy");
                date = new java.util.Date(fmt.parse(dataString).getTime());
            } catch (ParseException ex) {
                JOptionPane.showMessageDialog(rootPane, "Data inválida.");
                return;
            }
            SchedulingDAO sDAO = new SchedulingDAO();
            Menu menu = (Menu) cbMeal.getSelectedItem();
            
            List listStudentDateMeal = sDAO.schedulingDateStudentMeal(date, student, menu.getMeal());
            //se já foi cadastrado a refeição para o estudante, passa para o próximo
            if (listStudentDateMeal.size() > 0) {
                JOptionPane.showMessageDialog(rootPane, "O aluno já passui essa refeição cadastrada!");
                return;
            }
            
            Scheduling scheduling = new Scheduling();
            scheduling.setCampus(UserActive.returnCampus());
            scheduling.setMeal(menu.getMeal());
            scheduling.setMenu(menu);
            scheduling.setStudent(student);
            scheduling.setDate(date);
            scheduling.setDateInsert(sDAO.getServerDate());
            scheduling.setTime(sDAO.getServerTime());
            scheduling.setWasPresent(false);
            scheduling.setUser(UserActive.retornaUsuarioAtivo());
            sDAO.add(scheduling);
            
            JOptionPane.showMessageDialog(rootPane, "Refeição cadastrada com sucesso!");

            clearFields();

        }
    }//GEN-LAST:event_jButton1ActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        // TODO add your handling code here:
        setVisible(false);
    }//GEN-LAST:event_jButton2ActionPerformed

    private void edDateFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_edDateFocusLost
        insertMeals();
    }//GEN-LAST:event_edDateFocusLost

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(AllowMealStudentFrm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(AllowMealStudentFrm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(AllowMealStudentFrm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(AllowMealStudentFrm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new AllowMealStudentFrm().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JComboBox cbMeal;
    private javax.swing.JFormattedTextField edDate;
    private javax.swing.JTextField edtMat;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JTextArea taStudent;
    // End of variables declaration//GEN-END:variables

}
